<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	
	<!-- AOP 어노테이션 설정  ( @Aspect 라는 어노테이션을 자동으로 인식시켜준다)-->
	
	<annotation-driven />
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<context:component-scan base-package="com.project.schedule" />
	<context:component-scan base-package="com.project.Aop" />
	<context:component-scan base-package="com.project.websocket" />
	<!-- 
		 기존에 application.config.xml 했는데 인식마크가 안생겻는데 servlet에 하니 마크가 생김..
		 빈등록을 해주려면 해당 클래스의 @component 어노테이션을 써줘야한다 component-scan이 되어있는 가정하에...  
     -->
	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
</beans:beans>
